{"version":3,"sources":["components/QuesionList.jsx"],"names":["TechnoDetails","state","paramsData","HideShow","TechListId","Quesiontitle","summary","filter","QuestionError","toast","error","QuestionSuccess","success","AddQuestion","e","preventDefault","_this","setState","handleChange","Object","C_Users_sachin_ramappa_Desktop_THBS_Predicament_Solution_test_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","target","name","value","handleFilter","event","CreateQuession","postData","Summary","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","res","json","concat","C_Users_sachin_ramappa_Desktop_THBS_Predicament_Solution_test_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","document","getElementById","reset","_this2","this","props","match","params","id","response","Questionlist","lowercasedFilter","toLowerCase","filteredData","item","keys","some","key","includes","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","Fragment","react_toastify__WEBPACK_IMPORTED_MODULE_9__","className","onChange","type","htmlFor","map","temp","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","onSubmit","onClick","React","Component"],"mappings":"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","file":"static/js/4.757f5a1b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nexport default class TechnoDetails extends React.Component{\r\n  state ={\r\n    paramsData : [],\r\n    HideShow: false,\r\n    TechListId : '',\r\n    Quesiontitle :'',\r\n    summary:'',\r\n    filter :''\r\n  }\r\n\r\n  QuestionError = () => toast.error(\"Please add question tittle and summary\");\r\n  QuestionSuccess = () => toast.success(\"Question is creted succesfully\");\r\n\r\n  componentDidMount(){\r\n    fetch(`http://localhost:3000/TechList/${this.props.match.params.id}/?_embed=Questionlist`)\r\n    .then(response => response.json())\r\n    .then(json => this.setState({\r\n      paramsData : json.Questionlist,\r\n      TechListId: json.Questionlist[0].TechListId\r\n    }));\r\n}\r\n// Toogle Form\r\nAddQuestion=(e)=>{\r\n e.preventDefault();\r\n  this.setState({\r\n    HideShow : !this.state.HideShow\r\n  })\r\n}\r\n//Assign state vlaue on change\r\nhandleChange=(e)=>{\r\n  this.setState({\r\n    [e.target.name]: e.target.value\r\n  });\r\n}\r\n//seach filter\r\nhandleFilter = event => {\r\n  this.setState({ filter: event.target.value });\r\n};\r\n\r\n// Creating Question list\r\nCreateQuession=(e)=>{\r\n  e.preventDefault();\r\n  if(this.state.Quesiontitle ===\"\" || this.state.summary===\"\"){\r\n    this.QuestionError();\r\n  }else{\r\n    let postData = {\r\n      \"TechListId\": this.state.TechListId,\r\n      \"Quesiontitle\": this.state.Quesiontitle,\r\n      \"Summary\": this.state.summary\r\n    }\r\n    fetch(`http://localhost:3000/Questionlist`, {\r\n              method: 'POST',\r\n              headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(postData) \r\n          }).then(res=>res.json()).then(json=>{\r\n            this.setState({\r\n              paramsData : [...this.state.paramsData,json]\r\n            })\r\n            \r\n          })\r\n          this.QuestionSuccess();\r\n          document.getElementById('clearForm').reset();\r\n    }\r\n }\r\n\r\n    render(){\r\n      const { filter } = this.state;\r\n      const lowercasedFilter = filter.toLowerCase();\r\n      const filteredData = this.state.paramsData.filter(item => {\r\n        return Object.keys(item).some(key =>\r\n          item[key].toLowerCase().includes(lowercasedFilter)\r\n        );\r\n      });\r\n\r\n        return( \r\n          <React.Fragment>\r\n            <ToastContainer /> \r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <form className=\"col m12\">\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                    <i className=\"material-icons prefix\">search</i>\r\n                    <input id=\"icon_prefix\" value={filter} onChange={this.handleFilter} type=\"text\" className=\"validate\"/>\r\n                    <label htmlFor=\"icon_prefix2\">Search</label>\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n           \r\n            <div className=\"collection\">\r\n            {filteredData.map((temp)=>\r\n               <Link key={temp.id}className=\"collection-item \" to={`/UserComments/${temp.id}`}>\r\n                  <h6 className=\"black-text text-darken-4\">{temp.Quesiontitle}</h6>\r\n                </Link>\r\n                )}\r\n                 </div>\r\n           \r\n            <div className=\"row\">\r\n                <form className=\"col m12\" onSubmit={this.CreateQuession} id=\"clearForm\">\r\n                <button className=\"waves-effect waves-light btn grey darken-4 right\" onClick={this.AddQuestion}>Add Quession</button>  \r\n                {this.state.HideShow? ( <div className=\"row\">\r\n                  <div className=\"input-field col s12\">\r\n                      <input type='text' onChange={this.handleChange} name='Quesiontitle' className=\"validate\"/>\r\n                      <label htmlFor=\"email\">Quession title</label>\r\n                      <span className=\"helper-text\" >Add Quession title</span>\r\n                    </div> \r\n                    <div className=\"input-field col s12\">\r\n                    <textarea name='summary' onChange={this.handleChange} className=\"materialize-textarea\"></textarea>\r\n                      <label htmlFor=\"email\">Summary</label>\r\n                      <span className=\"helper-text\">Add Summary</span>\r\n                    </div> \r\n                    <button type=\"submit\" className=\"waves-effect waves-light btn light-green darken-4 right\">Create Quession</button>  \r\n                  </div>):''}\r\n               \r\n                </form>\r\n            </div>\r\n            </div>\r\n         \r\n         </React.Fragment>\r\n        \r\n        )\r\n    }\r\n}"],"sourceRoot":""}