{"version":3,"sources":["components/Header.js","components/ListOfTechno.jsx","components/Router.jsx","components/QuesionList.jsx","components/UserComment.jsx","index.js"],"names":["SearchAppBar","react_default","a","createElement","className","react_router_dom","to","style","padding","ListOfTechno","state","filter","handleChange","event","_this","setState","target","value","lowercasedFilter","this","toLowerCase","filteredData","props","TechList","item","Object","keys","some","key","includes","Fragment","id","fileter","onChange","type","htmlFor","map","tech","src","Url","heading","concat","React","Component","RouteData","_this2","fetch","then","response","json","components_ListOfTechno","TechnoDetails","paramsData","HideShow","TechListId","Quesiontitle","summary","AddQuestion","e","preventDefault","defineProperty","name","handleFilter","CreateQuession","postData","Summary","method","headers","Accept","Content-Type","body","JSON","stringify","res","console","log","match","params","Questionlist","onSubmit","onClick","data-error","data-success","temp","UserCommnet","QuesionDetails","QuestionlistId","username","timestamp","Date","toLocaleString","comment","UserCommetList","handleComment","data","toConsumableArray","Usercomment","comments","App","react_router","path","exact","component","UserComments","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.dd5675d8.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nexport default function SearchAppBar() {\r\n  let style = {\r\n    padding :10\r\n  }\r\n  return (\r\n    <nav>\r\n    <div className=\"nav-wrapper\">\r\n      <Link to=\"/\" className=\"brand-logo\" style={style}><h5>THBS</h5></Link>\r\n    </div>\r\n  </nav>\r\n  );\r\n}","import React from 'react';\r\nimport {Link } from \"react-router-dom\";\r\n\r\nclass ListOfTechno extends React.Component{\r\n    state={\r\n        filter :'',\r\n    }\r\n    handleChange = event => {\r\n        this.setState({ filter: event.target.value });\r\n      };\r\n    render(){\r\n        const { filter } = this.state;\r\n        const lowercasedFilter = filter.toLowerCase();\r\n        const filteredData = this.props.TechList.filter(item => {\r\n          return Object.keys(item).some(key =>\r\n            item[key].toLowerCase().includes(lowercasedFilter)\r\n          );\r\n        });\r\n        return(\r\n\r\n            <React.Fragment >\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                <form className=\"col m12\">\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                    <i className=\"material-icons prefix\">search</i>\r\n                    <input id=\"icon_prefix\" value={this.state.fileter}onChange={this.handleChange} \r\n                    type=\"text\" className=\"validate\"/>\r\n                    <label htmlFor=\"icon_prefix2\">Search</label>\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"row\">\r\n            {filteredData.map(tech =>\r\n            <div key={tech.id}className=\"col s12 m4\">\r\n                <div className=\"card hoverable\">\r\n                <div className=\"card-image\">\r\n                    <img src={tech.Url}/>\r\n                    <span className=\"card-title\">{tech.heading}</span>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <p>I am a very simple card. I am good at containing small bits of information.\r\n                    I am convenient because I require little markup to use effectively.</p>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                <Link to={`/QuesionList/${tech.id}`}>{tech.heading}</Link>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            )}\r\n        </div>\r\n        </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default ListOfTechno;\r\n\r\n\r\n","import React from 'react';\r\nimport ListOfTechno from './ListOfTechno'\r\n\r\nexport default class RouteData extends React.Component{\r\n    state={\r\n        TechList : []\r\n    }\r\n    componentDidMount(){\r\n        fetch(`https://my-json-server.typicode.com/SachiSagar5/SampleStackOverFlow/TechList`)\r\n        .then(response => response.json())\r\n        .then(json => this.setState({\r\n            TechList : json\r\n        }))\r\n    }\r\n \r\n    render(){\r\n   \r\n        return(\r\n            <div>\r\n                 <ListOfTechno TechList={this.state.TechList}/>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class TechnoDetails extends React.Component{\r\n  state ={\r\n    paramsData : [],\r\n    HideShow: false,\r\n    TechListId : '',\r\n    Quesiontitle :'',\r\n    summary:'',\r\n    filter :''\r\n  }\r\n  componentDidMount(){\r\n    fetch(`https://my-json-server.typicode.com/SachiSagar5/SampleStackOverFlow/TechList/${this.props.match.params.id}/?_embed=Questionlist`)\r\n    .then(response => response.json())\r\n    .then(json => this.setState({\r\n      paramsData : json.Questionlist,\r\n      TechListId: json.Questionlist[0].TechListId\r\n    }));\r\n}\r\nAddQuestion=(e)=>{\r\n e.preventDefault();\r\n  this.setState({\r\n    HideShow : !this.state.HideShow\r\n  })\r\n}\r\nhandleChange=(e)=>{\r\n  this.setState({\r\n    [e.target.name]: e.target.value\r\n  });\r\n}\r\nhandleFilter = event => {\r\n  this.setState({ filter: event.target.value });\r\n};\r\nCreateQuession=(e)=>{\r\n  e.preventDefault();\r\n  let postData = {\r\n    \"TechListId\": this.state.TechListId,\r\n    \"Quesiontitle\": this.state.Quesiontitle,\r\n    \"Summary\": this.state.summary\r\n  }\r\n  fetch(`https://my-json-server.typicode.com/SachiSagar5/SampleStackOverFlows/Questionlist`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(postData) \r\n        }).then(res=>res.json()).then(json=>{console.log(json)})\r\n }\r\n    render(){\r\n      const { filter } = this.state;\r\n      const lowercasedFilter = filter.toLowerCase();\r\n      const filteredData = this.state.paramsData.filter(item => {\r\n        return Object.keys(item).some(key =>\r\n          item[key].toLowerCase().includes(lowercasedFilter)\r\n        );\r\n      });\r\n        return(\r\n          <React.Fragment>\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <form className=\"col m12\">\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                    <i className=\"material-icons prefix\">search</i>\r\n                    <input id=\"icon_prefix\" value={filter} onChange={this.handleFilter} type=\"text\" className=\"validate\"/>\r\n                    <label htmlFor=\"icon_prefix2\">Search</label>\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"row\">\r\n                <form className=\"col m12\" onSubmit={this.CreateQuession}>\r\n                <button className=\"waves-effect waves-light btn\" onClick={this.AddQuestion}>Add Quession</button>  \r\n                {this.state.HideShow? ( <div className=\"row\">\r\n                  <div className=\"input-field col s12\">\r\n                      <input type='text' onChange={this.handleChange} name='Quesiontitle' className=\"validate\"/>\r\n                      <label htmlFor=\"email\">Quession title</label>\r\n                      <span className=\"helper-text\" data-error=\"wrong\" data-success=\"right\">Add Quession title</span>\r\n                    </div> \r\n                    <div className=\"input-field col s12\">\r\n                    <textarea name='summary' onChange={this.handleChange} className=\"materialize-textarea\"></textarea>\r\n                      <label htmlFor=\"email\">Summary</label>\r\n                      <span className=\"helper-text\" data-error=\"wrong\" data-success=\"right\">Add Summary</span>\r\n                    </div> \r\n                    <button type=\"submit\" className=\"waves-effect waves-light btn\">Create Quession</button>  \r\n                  </div>):''}\r\n               \r\n                </form>\r\n            </div>\r\n            <div className=\"collection\">\r\n            {filteredData.map((temp)=>\r\n               <Link key={temp.id}className=\"collection-item\" to={`/UserComments/${temp.id}`}>\r\n                  <h6>{temp.Quesiontitle}</h6>\r\n                </Link>\r\n                )}\r\n                 </div>\r\n            </div>\r\n         </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nclass UserCommnet extends React.Component{\r\n    \r\n    state={\r\n        QuesionDetails:[],\r\n        QuestionlistId: '',\r\n        username :'',\r\n        timestamp:new Date().toLocaleString(),\r\n        comment:'',\r\n        UserCommetList:[]\r\n    }\r\n    componentDidMount(){\r\n        fetch(`https://my-json-server.typicode.com/SachiSagar5/SampleStackOverFlow/Questionlist/${this.props.match.params.id}/?_embed=Usercomment`)\r\n        .then(response => response.json())\r\n        .then(json => this.setState({\r\n            QuesionDetails : json,\r\n            QuestionlistId : json.Usercomment[0].QuestionlistId,\r\n            UserCommetList : json.Usercomment\r\n        }));\r\n        \r\n    }\r\n    handleComment =(e)=>{\r\n        e.preventDefault();\r\n          let data = {\r\n            \"QuestionlistId\":this.state.QuestionlistId,\r\n            \"username\" : this.state.username,\r\n            \"timestamp\": this.state.timestamp,\r\n            \"comment\": this.state.comment\r\n          }\r\n        fetch(`https://my-json-server.typicode.com/SachiSagar5/SampleStackOverFlow/Usercomment`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data) \r\n        }).then(res=>res.json())\r\n        .then(json=>{\r\n            this.setState({\r\n                UserCommetList : [...this.state.UserCommetList,json]\r\n            })\r\n        });\r\n    }\r\n    handleChange=(e)=> {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n        \r\n    }\r\n    render(){\r\n    let comments\r\n    if(this.state.QuesionDetails.Usercomment){\r\n        comments = this.state.UserCommetList.map((temp)=> \r\n        <div key={temp.id}className=\"card-panel grey lighten-5 z-depth-1\">\r\n        <div className=\"row\">\r\n        <div className=\"col m2 valign-wrapper\"><i className=\"material-icons\">account_circle</i> &nbsp;{temp.username}</div>\r\n        <div className=\"col m7\">\r\n        <span className=\"black-text\">\r\n            {temp.comment}\r\n        </span>\r\n        </div>\r\n        <div className=\"col m3 valign-wrapper\">\r\n        <i className=\"material-icons\">query_builder</i> &nbsp; {temp.timestamp}</div>\r\n    </div>\r\n    </div> \r\n            )\r\n    }\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                <blockquote> <h4>{this.state.QuesionDetails.Quesiontitle}</h4> </blockquote>\r\n                <p className=\"flow-text\">{this.state.QuesionDetails.Summary}</p>\r\n                <hr/>\r\n                <section>\r\n                    <h5>User Comments</h5>\r\n                    <hr/>\r\n                    <div className=\"col s12 m12\">\r\n                     {comments}\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <form className=\"col s12\" onSubmit={this.handleComment}>\r\n                    <div className=\"row\">\r\n                    <div className=\"input-field col m3\">\r\n                            <input id=\"password\" onChange={this.handleChange} name='username' type=\"text\" className=\"validate\"/>\r\n                            <label htmlFor=\"password\">User Name</label>\r\n                            </div>\r\n                        <div className=\"input-field col m9\">\r\n                        <textarea id=\"textarea1\" onChange={this.handleChange} name='comment' className=\"materialize-textarea\"></textarea>\r\n                        <label htmlFor=\"textarea1\">Enter your Comment</label>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Add Comment\r\n                        <i className=\"material-icons right\">send</i>\r\n                    </button>\r\n                            \r\n                    </form>\r\n                </div>\r\n                </section>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserCommnet;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SearchAppBar from './components/Header'\nimport RouteData from './components/Router'\nimport TechnoDetails from './components/QuesionList';\nimport UserComments from './components/UserComment';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nexport default class App extends React.Component{\n    render(){\n        return(\n            <div>\n                <Router>\n                <SearchAppBar/>\n                  <Route path=\"/\" exact component={RouteData} />\n                  <Route  path=\"/Quesionlist/:id\" component={TechnoDetails} />\n                  <Route  path=\"/UserComments/:id\" component={UserComments} />\n                </Router>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}