{"version":3,"sources":["components/Header.js","components/ListOfTechno.jsx","components/Router.jsx","components/QuesionList.jsx","components/UserComment.jsx","index.js"],"names":["SearchAppBar","react_default","a","createElement","className","react_router_dom","to","style","padding","ListOfTechno","Fragment","id","type","for","this","props","TechList","map","tech","src","Url","heading","concat","href","React","Component","RouteData","state","_this2","fetch","then","response","json","setState","components_ListOfTechno","TechnoDetails","paramsData","HideShow","TechListId","Quesiontitle","summary","AddQuestion","e","preventDefault","_this","handleChange","Object","defineProperty","target","name","value","CreateQuession","postData","Summary","method","headers","Accept","Content-Type","body","JSON","stringify","res","console","log","match","params","Questionlist","htmlFor","onSubmit","onClick","onChange","data-error","data-success","temp","key","UserCommnet","QuesionDetails","QuestionlistId","username","timestamp","Date","toLocaleString","comment","UserCommetList","handleComment","data","toConsumableArray","Usercomment","comments","App","react_router","path","exact","component","UserComments","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.23fd71ca.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nexport default function SearchAppBar() {\r\n  let style = {\r\n    padding :10\r\n  }\r\n  return (\r\n    <nav>\r\n    <div className=\"nav-wrapper\">\r\n      <Link to=\"/\" className=\"brand-logo\" style={style}><h5>THBS</h5></Link>\r\n    </div>\r\n  </nav>\r\n  );\r\n}","import React from 'react';\r\nimport {Link } from \"react-router-dom\";\r\n\r\nclass ListOfTechno extends React.Component{\r\n    render(){\r\n        return(\r\n            <React.Fragment >\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                <form className=\"col m12\">\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                    <i className=\"material-icons prefix\">search</i>\r\n                    <input id=\"icon_prefix\" type=\"text\" className=\"validate\"/>\r\n                    <label for=\"icon_prefix2\">Search</label>\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"row\">\r\n            {this.props.TechList.map(tech =>\r\n            <div className=\"col s12 m4\">\r\n                <div className=\"card hoverable\">\r\n                <div className=\"card-image\">\r\n                    <img src={tech.Url}/>\r\n                    <span className=\"card-title\">{tech.heading}</span>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <p>I am a very simple card. I am good at containing small bits of information.\r\n                    I am convenient because I require little markup to use effectively.</p>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                <Link to={`/QuesionList/${tech.id}`}><a href=\"\">{tech.heading}</a></Link>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            )}\r\n        </div>\r\n        </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default ListOfTechno;\r\n\r\n\r\n","import React from 'react';\r\nimport ListOfTechno from './ListOfTechno'\r\n\r\nexport default class RouteData extends React.Component{\r\n    state={\r\n        TechList : []\r\n    }\r\n    componentDidMount(){\r\n        fetch(`https://my-json-server.typicode.com/SachiSagar5/fakeDatabase/TechList`)\r\n        .then(response => response.json())\r\n        .then(json => this.setState({\r\n            TechList : json\r\n        }))\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                 <ListOfTechno TechList={this.state.TechList}/>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class TechnoDetails extends React.Component{\r\n  state ={\r\n    paramsData : [],\r\n    HideShow: false,\r\n    TechListId : '',\r\n    Quesiontitle :'',\r\n    summary:''\r\n\r\n  }\r\n  componentDidMount(){\r\n    fetch(`https://my-json-server.typicode.com/SachiSagar5/fakeDatabase/TechList/${this.props.match.params.id}/?_embed=Questionlist`)\r\n    .then(response => response.json())\r\n    .then(json => this.setState({\r\n      paramsData : json.Questionlist,\r\n      TechListId: json.Questionlist[0].TechListId\r\n    }));\r\n}\r\nAddQuestion=(e)=>{\r\n e.preventDefault();\r\n  this.setState({\r\n    HideShow : !this.state.HideShow\r\n  })\r\n}\r\nhandleChange=(e)=>{\r\n  this.setState({\r\n    [e.target.name]: e.target.value\r\n  });\r\n}\r\nCreateQuession=(e)=>{\r\n  e.preventDefault();\r\n  let postData = {\r\n    \"TechListId\": this.state.TechListId,\r\n    \"Quesiontitle\": this.state.Quesiontitle,\r\n    \"Summary\": this.state.summary\r\n  }\r\n  fetch(`http://localhost:3000/QuestionList/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(postData) \r\n        }).then(res=>res.json()).then(json=>{console.log(json)})\r\n }\r\n    render(){\r\n        return(\r\n          <React.Fragment>\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <form className=\"col m12\">\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                    <i className=\"material-icons prefix\">search</i>\r\n                    <input id=\"icon_prefix\" type=\"text\" className=\"validate\"/>\r\n                    <label htmlFor=\"icon_prefix2\">Search</label>\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"row\">\r\n                <form className=\"col m12\" onSubmit={this.CreateQuession}>\r\n                <button className=\"waves-effect waves-light btn\" onClick={this.AddQuestion}>Add Quession</button>  \r\n                {this.state.HideShow? ( <div className=\"row\">\r\n                  <div className=\"input-field col s12\">\r\n                      <input type='text' onChange={this.handleChange} name='Quesiontitle' className=\"validate\"/>\r\n                      <label htmlFor=\"email\">Quession title</label>\r\n                      <span className=\"helper-text\" data-error=\"wrong\" data-success=\"right\">Add Quession title</span>\r\n                    </div> \r\n                    <div className=\"input-field col s12\">\r\n                    <textarea name='summary' onChange={this.handleChange} className=\"materialize-textarea\"></textarea>\r\n                      <label htmlFor=\"email\">Summary</label>\r\n                      <span className=\"helper-text\" data-error=\"wrong\" data-success=\"right\">Add Summary</span>\r\n                    </div> \r\n                    <button type=\"submit\" className=\"waves-effect waves-light btn\">Create Quession</button>  \r\n                  </div>):''}\r\n               \r\n                </form>\r\n            </div>\r\n            <div className=\"collection\">\r\n            {this.state.paramsData.map((temp)=>\r\n               <Link key={temp.id}className=\"collection-item\" to={`/UserComments/${temp.id}`}>\r\n                  <h6>{temp.Quesiontitle}</h6>\r\n                </Link>\r\n                )}\r\n                 </div>\r\n            </div>\r\n         </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nclass UserCommnet extends React.Component{\r\n    \r\n    state={\r\n        QuesionDetails:[],\r\n        QuestionlistId: '',\r\n        username :'',\r\n        timestamp:new Date().toLocaleString(),\r\n        comment:'',\r\n        UserCommetList:[]\r\n    }\r\n    componentDidMount(){\r\n        fetch(`https://my-json-server.typicode.com/SachiSagar5/fakeDatabase/Questionlist/${this.props.match.params.id}/?_embed=Usercomment`)\r\n        .then(response => response.json())\r\n        .then(json => this.setState({\r\n            QuesionDetails : json,\r\n            QuestionlistId : json.Usercomment[0].QuestionlistId,\r\n            UserCommetList : json.Usercomment\r\n        }));\r\n        \r\n    }\r\n    handleComment =(e)=>{\r\n        e.preventDefault();\r\n          let data = {\r\n            \"QuestionlistId\":this.state.QuestionlistId,\r\n            \"username\" : this.state.username,\r\n            \"timestamp\": this.state.timestamp,\r\n            \"comment\": this.state.comment\r\n          }\r\n        fetch(`https://my-json-server.typicode.com/SachiSagar5/fakeDatabase/Usercomment`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data) \r\n        }).then(res=>res.json())\r\n        .then(json=>{\r\n            this.setState({\r\n                UserCommetList : [...this.state.UserCommetList,json]\r\n            })\r\n        });\r\n    }\r\n    handleChange=(e)=> {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n        \r\n    }\r\n    render(){\r\n    let comments\r\n    if(this.state.QuesionDetails.Usercomment){\r\n        comments = this.state.UserCommetList.map((temp)=> \r\n        <div key={temp.id}className=\"card-panel grey lighten-5 z-depth-1\">\r\n        <div className=\"row\">\r\n        <div className=\"col m2 valign-wrapper\"><i className=\"material-icons\">account_circle</i> &nbsp;{temp.username}</div>\r\n        <div className=\"col m7\">\r\n        <span className=\"black-text\">\r\n            {temp.comment}\r\n        </span>\r\n        </div>\r\n        <div className=\"col m3 valign-wrapper\">\r\n        <i className=\"material-icons\">query_builder</i> &nbsp; {temp.timestamp}</div>\r\n    </div>\r\n    </div> \r\n            )\r\n    }\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                <blockquote> <h4>{this.state.QuesionDetails.Quesiontitle}</h4> </blockquote>\r\n                <p className=\"flow-text\">{this.state.QuesionDetails.Summary}</p>\r\n                <hr/>\r\n                <section>\r\n                    <h5>User Comments</h5>\r\n                    <hr/>\r\n                    <div className=\"col s12 m12\">\r\n                     {comments}\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <form className=\"col s12\" onSubmit={this.handleComment}>\r\n                    <div className=\"row\">\r\n                    <div className=\"input-field col m3\">\r\n                            <input id=\"password\" onChange={this.handleChange} name='username' type=\"text\" className=\"validate\"/>\r\n                            <label htmlFor=\"password\">User Name</label>\r\n                            </div>\r\n                        <div className=\"input-field col m9\">\r\n                        <textarea id=\"textarea1\" onChange={this.handleChange} name='comment' className=\"materialize-textarea\"></textarea>\r\n                        <label htmlFor=\"textarea1\">Enter your Comment</label>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Add Comment\r\n                        <i className=\"material-icons right\">send</i>\r\n                    </button>\r\n                            \r\n                    </form>\r\n                </div>\r\n                </section>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserCommnet;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SearchAppBar from './components/Header'\nimport RouteData from './components/Router'\nimport TechnoDetails from './components/QuesionList';\nimport UserComments from './components/UserComment';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nexport default class App extends React.Component{\n    render(){\n        return(\n            <div>\n                <Router>\n                <SearchAppBar/>\n                  <Route path=\"/\" exact component={RouteData} />\n                  <Route  path=\"/Quesionlist/:id\" component={TechnoDetails} />\n                  <Route  path=\"/UserComments/:id\" component={UserComments} />\n                </Router>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}